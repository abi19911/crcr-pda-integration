--| Chernobyl Relay Chat
--| Interface for external application
--| By TKGP
--| CRCR additions by Anchorpoint
--| PDA implementation by Sparco

-- Constants
local OUTPATH = getFS():update_path("$game_config$", "").."\\crc_output.txt"

-- Options
local option = {
	chatKey = DIK_keys.DIK_RETURN,
	}

-- Etc
local config = system_ini()
local sendQueue = {}
local chatBox
local showChatBox = false
local ChatBoxEnabled = true

local function send(message, ...)
	local line = message:format(...).."\n"
	table.insert(sendQueue, line)
end

local function update_ui()
	if chatBox and not chatBox.focus then
		chatBox.editBox:CaptureFocus(true)
		chatBox.focus = true
	end
	
	if showChatBox and ChatBoxEnabled then
		showChatBox = false
		chatBox = ChatBox_UI()
		chatBox:ShowDialog()
		-- Disable keypress callback so other scripts don't fire while typing
		Register_UI("ChatBox_UI","chernobyl_relay_chat")
	end
	
	if #sendQueue > 0 then
		local output = io.open(OUTPATH, "a")
		if output then
			for _, line in ipairs(sendQueue) do
				output:write(line)
			end
			output:close()
			sendQueue = {}
		end
	end
end

local function onKeyPress(dik)
	if dik == option.chatKey and not chatBox then
		showChatBox = true
	end
end

function on_game_start()
	ChatBoxEnabled = true
	AddUniqueCall(update_ui)
	RegisterScriptCallback("on_key_press", onKeyPress)
end

----------------------------------------------GUI------------------------------------------------------

class "ChatBox_UI" (CUIScriptWnd)
function ChatBox_UI:__init() super()
	
	self:SetWndRect(Frect():set(0, 0, 1024, 768))
	self.xml = CScriptXmlInit()
	self.xml:ParseFile("crc_chatbox.xml")
	self.editBox = self.xml:InitEditBox("edit_box", self)
	self.focus = false
end

function ChatBox_UI:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self, dik, keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_RETURN or dik == DIK_keys.DIK_NUMPADENTER then
			self:Send()
		elseif dik == DIK_keys.DIK_ESCAPE then
			currChannel = self.currChannel
			self:Cancel()
		end
	end
	return true
end

function ChatBox_UI:Send()
	local input = self.editBox:GetText()
	if input and input ~= "" then
		self.editBox:SetText("")
		send("Message/%s/%s", db.actor:character_community(), input)
	end
	if option.closeChat then
		self:Cancel()
	else
		chatBox.editBox:CaptureFocus(true)
	end
end

function ChatBox_UI:Cancel()
	chatBox:HideDialog()
	Unregister_UI("ChatBox_UI") --possible fix to a stack trace: 0x000000014014D6CA (moved this BEFORE = nil)
	chatBox = nil
end